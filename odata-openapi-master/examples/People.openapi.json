{
    "swagger": "2.0",
    "info": {
        "title": "Service for namespace PeopleService",
        "version": "",
        "description": "This service is located at [http://localhost/People.svc/](http://localhost/People.svc/)\n\n## Entity Data Model\n![ER Diagram](https://yuml.me/diagram/class/[Supplier{bg:orange}],[Supplier]++-0..1[Address],[Supplier]-*>[ProductService.Product{bg:whitesmoke}],[Address],[Person{bg:orange}],[Person]-0..1>[PersonDetail],[Person]^[Customer{bg:orange}],[Person]^[Employee{bg:orange}],[PersonDetail{bg:orange}],[PersonDetail]++-0..1[Address],[PersonDetail]-0..1>[Person],[Suppliers{bg:dodgerblue}]++-*>[Supplier],[People{bg:dodgerblue}]++-*>[Person],[PersonDetails{bg:dodgerblue}]++-*>[PersonDetail])\n\n### Legend\n![Legend](https://yuml.me/diagram/plain;dir:TB;scale:60/class/[External.Type{bg:whitesmoke}],[ComplexType],[EntityType{bg:orange}],[EntitySet/Singleton/Operation{bg:dodgerblue}])\n\n## References\n- [ProductService](?url=https://raw.githubusercontent.com/oasis-tcs/odata-openapi/master/examples/Products.openapi.json)"
    },
    "schemes": [
        "http"
    ],
    "host": "localhost",
    "basePath": "/People.svc",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [
        {
            "name": "Suppliers"
        },
        {
            "name": "People"
        },
        {
            "name": "PersonDetails"
        }
    ],
    "paths": {
        "/Suppliers": {
            "get": {
                "summary": "Get entities from Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "ID desc",
                                "Name",
                                "Name desc",
                                "Address",
                                "Address desc",
                                "Location",
                                "Location desc",
                                "Concurrency",
                                "Concurrency desc"
                            ]
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "Name",
                                "Address",
                                "Location",
                                "Concurrency"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Products"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of Supplier",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PeopleService.Supplier"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "Supplier",
                        "in": "body",
                        "description": "New entity",
                        "schema": {
                            "$ref": "#/definitions/PeopleService.Supplier-create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "schema": {
                            "$ref": "#/definitions/PeopleService.Supplier"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Suppliers({ID})": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "integer",
                    "format": "int32"
                }
            ],
            "get": {
                "summary": "Get entity from Suppliers by key",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "Name",
                                "Address",
                                "Location",
                                "Concurrency"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Products"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/PeopleService.Supplier"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "Supplier",
                        "in": "body",
                        "description": "New property values",
                        "schema": {
                            "$ref": "#/definitions/PeopleService.Supplier-update"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Suppliers({ID})/Products": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "integer",
                    "format": "int32"
                }
            ],
            "get": {
                "summary": "Get entities from related Products",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of Product",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "./Products.openapi.json#/definitions/ProductService.Product"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/People": {
            "get": {
                "summary": "Get entities from People",
                "tags": [
                    "People"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "ID desc",
                                "Name",
                                "Name desc"
                            ]
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "Name"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "PersonDetail"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of Person",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PeopleService.Person"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to People",
                "tags": [
                    "People"
                ],
                "parameters": [
                    {
                        "name": "Person",
                        "in": "body",
                        "description": "New entity",
                        "schema": {
                            "$ref": "#/definitions/PeopleService.Person-create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "schema": {
                            "$ref": "#/definitions/PeopleService.Person"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/People({ID})": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "integer",
                    "format": "int32"
                }
            ],
            "get": {
                "summary": "Get entity from People by key",
                "tags": [
                    "People"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "Name"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "PersonDetail"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/PeopleService.Person"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in People",
                "tags": [
                    "People"
                ],
                "parameters": [
                    {
                        "name": "Person",
                        "in": "body",
                        "description": "New property values",
                        "schema": {
                            "$ref": "#/definitions/PeopleService.Person-update"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from People",
                "tags": [
                    "People"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/People({ID})/PersonDetail": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "integer",
                    "format": "int32"
                }
            ],
            "get": {
                "summary": "Get related PersonDetail",
                "tags": [
                    "People",
                    "PersonDetails"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "PersonID",
                                "Age",
                                "Gender",
                                "Phone",
                                "Address",
                                "Photo"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Person"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/PeopleService.PersonDetail"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/PersonDetails": {
            "get": {
                "summary": "Get entities from PersonDetails",
                "tags": [
                    "PersonDetails"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "PersonID",
                                "PersonID desc",
                                "Age",
                                "Age desc",
                                "Gender",
                                "Gender desc",
                                "Phone",
                                "Phone desc",
                                "Address",
                                "Address desc",
                                "Photo",
                                "Photo desc"
                            ]
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "PersonID",
                                "Age",
                                "Gender",
                                "Phone",
                                "Address",
                                "Photo"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Person"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of PersonDetail",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PeopleService.PersonDetail"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to PersonDetails",
                "tags": [
                    "PersonDetails"
                ],
                "parameters": [
                    {
                        "name": "PersonDetail",
                        "in": "body",
                        "description": "New entity",
                        "schema": {
                            "$ref": "#/definitions/PeopleService.PersonDetail-create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "schema": {
                            "$ref": "#/definitions/PeopleService.PersonDetail"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/PersonDetails({PersonID})": {
            "parameters": [
                {
                    "name": "PersonID",
                    "in": "path",
                    "required": true,
                    "description": "key: PersonID",
                    "type": "integer",
                    "format": "int32"
                }
            ],
            "get": {
                "summary": "Get entity from PersonDetails by key",
                "tags": [
                    "PersonDetails"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "PersonID",
                                "Age",
                                "Gender",
                                "Phone",
                                "Address",
                                "Photo"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Person"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/PeopleService.PersonDetail"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in PersonDetails",
                "tags": [
                    "PersonDetails"
                ],
                "parameters": [
                    {
                        "name": "PersonDetail",
                        "in": "body",
                        "description": "New property values",
                        "schema": {
                            "$ref": "#/definitions/PeopleService.PersonDetail-update"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from PersonDetails",
                "tags": [
                    "PersonDetails"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/PersonDetails({PersonID})/Person": {
            "parameters": [
                {
                    "name": "PersonID",
                    "in": "path",
                    "required": true,
                    "description": "key: PersonID",
                    "type": "integer",
                    "format": "int32"
                }
            ],
            "get": {
                "summary": "Get related Person",
                "tags": [
                    "PersonDetails"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "Name"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "PersonDetail"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/PeopleService.Person"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/$batch": {
            "post": {
                "summary": "Send a group of requests",
                "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).",
                "tags": [
                    "Batch Requests"
                ],
                "consumes": [
                    "multipart/mixed;boundary=request-separator"
                ],
                "produces": [
                    "multipart/mixed"
                ],
                "parameters": [
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Batch request",
                        "schema": {
                            "type": "string",
                            "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET Suppliers HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Batch response",
                        "schema": {
                            "type": "string",
                            "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        }
    },
    "definitions": {
        "PeopleService.Supplier": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Address": {
                    "$ref": "#/definitions/PeopleService.Address"
                },
                "Location": {
                    "$ref": "#/definitions/geoPoint"
                },
                "Concurrency": {
                    "type": "integer",
                    "format": "int32"
                },
                "Products": {
                    "type": "array",
                    "items": {
                        "$ref": "./Products.openapi.json#/definitions/ProductService.Product"
                    }
                }
            },
            "title": "Supplier"
        },
        "PeopleService.Supplier-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Address": {
                    "$ref": "#/definitions/PeopleService.Address-create"
                },
                "Location": {
                    "$ref": "#/definitions/geoPoint"
                },
                "Concurrency": {
                    "type": "integer",
                    "format": "int32"
                },
                "Products": {
                    "type": "array",
                    "items": {
                        "$ref": "./Products.openapi.json#/definitions/ProductService.Product"
                    }
                }
            },
            "required": [
                "ID"
            ],
            "title": "Supplier (for create)"
        },
        "PeopleService.Supplier-update": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Address": {
                    "$ref": "#/definitions/PeopleService.Address-update"
                },
                "Location": {
                    "$ref": "#/definitions/geoPoint"
                },
                "Concurrency": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "Supplier (for update)"
        },
        "PeopleService.Address": {
            "type": "object",
            "properties": {
                "Street": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "City": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "State": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "ZipCode": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Country": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                }
            },
            "title": "Address"
        },
        "PeopleService.Address-create": {
            "type": "object",
            "properties": {
                "Street": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "City": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "State": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "ZipCode": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Country": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                }
            },
            "title": "Address (for create)"
        },
        "PeopleService.Address-update": {
            "type": "object",
            "properties": {
                "Street": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "City": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "State": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "ZipCode": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Country": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                }
            },
            "title": "Address (for update)"
        },
        "PeopleService.Person": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "PersonDetail": {
                    "$ref": "#/definitions/PeopleService.PersonDetail"
                }
            },
            "title": "Person"
        },
        "PeopleService.Person-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "PersonDetail": {
                    "$ref": "#/definitions/PeopleService.PersonDetail-create"
                }
            },
            "required": [
                "ID"
            ],
            "title": "Person (for create)"
        },
        "PeopleService.Person-update": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                }
            },
            "title": "Person (for update)"
        },
        "PeopleService.Customer": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "PersonDetail": {
                    "$ref": "#/definitions/PeopleService.PersonDetail"
                },
                "TotalExpense": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                }
            },
            "title": "Customer"
        },
        "PeopleService.Customer-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "PersonDetail": {
                    "$ref": "#/definitions/PeopleService.PersonDetail-create"
                },
                "TotalExpense": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                }
            },
            "required": [
                "ID"
            ],
            "title": "Customer (for create)"
        },
        "PeopleService.Customer-update": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "TotalExpense": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                }
            },
            "title": "Customer (for update)"
        },
        "PeopleService.Employee": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "PersonDetail": {
                    "$ref": "#/definitions/PeopleService.PersonDetail"
                },
                "EmployeeID": {
                    "type": [
                        "integer",
                        "string"
                    ],
                    "format": "int64",
                    "example": "42"
                },
                "HireDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-04-13T15:51:04Z"
                },
                "Salary": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "float",
                    "example": 3.14
                }
            },
            "title": "Employee"
        },
        "PeopleService.Employee-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "PersonDetail": {
                    "$ref": "#/definitions/PeopleService.PersonDetail-create"
                },
                "EmployeeID": {
                    "type": [
                        "integer",
                        "string"
                    ],
                    "format": "int64",
                    "example": "42"
                },
                "HireDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-04-13T15:51:04Z"
                },
                "Salary": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "float",
                    "example": 3.14
                }
            },
            "required": [
                "ID"
            ],
            "title": "Employee (for create)"
        },
        "PeopleService.Employee-update": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "EmployeeID": {
                    "type": [
                        "integer",
                        "string"
                    ],
                    "format": "int64",
                    "example": "42"
                },
                "HireDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-04-13T15:51:04Z"
                },
                "Salary": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "float",
                    "example": 3.14
                }
            },
            "title": "Employee (for update)"
        },
        "PeopleService.PersonDetail": {
            "type": "object",
            "properties": {
                "PersonID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Age": {
                    "type": "integer",
                    "format": "uint8"
                },
                "Gender": {
                    "type": "boolean"
                },
                "Phone": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Address": {
                    "$ref": "#/definitions/PeopleService.Address"
                },
                "Photo": {
                    "type": "string",
                    "format": "base64url"
                },
                "Person": {
                    "$ref": "#/definitions/PeopleService.Person"
                }
            },
            "title": "PersonDetail"
        },
        "PeopleService.PersonDetail-create": {
            "type": "object",
            "properties": {
                "PersonID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Age": {
                    "type": "integer",
                    "format": "uint8"
                },
                "Gender": {
                    "type": "boolean"
                },
                "Phone": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Address": {
                    "$ref": "#/definitions/PeopleService.Address-create"
                },
                "Photo": {
                    "type": "string",
                    "format": "base64url"
                },
                "Person": {
                    "$ref": "#/definitions/PeopleService.Person-create"
                }
            },
            "required": [
                "PersonID"
            ],
            "title": "PersonDetail (for create)"
        },
        "PeopleService.PersonDetail-update": {
            "type": "object",
            "properties": {
                "Age": {
                    "type": "integer",
                    "format": "uint8"
                },
                "Gender": {
                    "type": "boolean"
                },
                "Phone": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Address": {
                    "$ref": "#/definitions/PeopleService.Address-update"
                },
                "Photo": {
                    "type": "string",
                    "format": "base64url"
                }
            },
            "title": "PersonDetail (for update)"
        },
        "geoPoint": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "Point"
                    ],
                    "default": "Point"
                },
                "coordinates": {
                    "$ref": "#/definitions/geoPosition"
                }
            },
            "required": [
                "type",
                "coordinates"
            ]
        },
        "geoPosition": {
            "type": "array",
            "items": {
                "type": "number"
            },
            "minItems": 2
        },
        "error": {
            "type": "object",
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "type": "object",
                    "required": [
                        "code",
                        "message"
                    ],
                    "properties": {
                        "code": {
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        },
                        "target": {
                            "type": "string"
                        },
                        "details": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "code",
                                    "message"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "target": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "innererror": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                        }
                    }
                }
            }
        }
    },
    "parameters": {
        "top": {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
            "type": "integer",
            "minimum": 0
        },
        "skip": {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
            "type": "integer",
            "minimum": 0
        },
        "count": {
            "name": "$count",
            "in": "query",
            "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
            "type": "boolean"
        },
        "search": {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
            "type": "string"
        }
    },
    "responses": {
        "error": {
            "description": "Error",
            "schema": {
                "$ref": "#/definitions/error"
            }
        }
    }
}
