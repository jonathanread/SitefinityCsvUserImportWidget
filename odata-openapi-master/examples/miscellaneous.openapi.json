{
    "swagger": "2.0",
    "info": {
        "title": "Examples from Part 3: CSDL",
        "version": "",
        "description": "This service is located at [http://localhost/service-root/](http://localhost/service-root/)\n\n## Entity Data Model\n![ER Diagram](https://yuml.me/diagram/class/[Measurement],[Example7to11],[Product{bg:orange}],[Product]->[Category],[Product]-0..1>[Supplier],[Supplier{bg:orange}],[Customer{bg:orange}],[Order{bg:orange}],[Category{bg:orange}],[Category]-*>[Product],[Employee{bg:orange}],[Employee]-0..1>[Manager],[Employee]^[Manager{bg:orange}],[Manager]-*>[Employee],[Category17{bg:orange}],[Category18{bg:orange}],[Category18]++-[EntityInfo],[EntityInfo],[OrderLine{bg:orange}],[Dimensions],[Product22{bg:orange}],[Product22]++-0..1[Dimensions],[Product22]++-0..1[Dimensions],[ShipmentBox{bg:orange}],[ShipmentBox]++-0..1[Dimensions],[Size],[Size]++-0..1[Length],[Size]++-0..1[Weight],[StandardCustomers{bg:dodgerblue}]++-*>[Customer],[PreferredCustomers{bg:dodgerblue}]++-*>[Customer],[Orders{bg:dodgerblue}]++-*>[Order],[TopSellingProducts{bg:dodgerblue}]-*>[Product],[Products{bg:dodgerblue}]++-*>[Product],[Categories{bg:dodgerblue}]++-*>[Category],[Suppliers{bg:dodgerblue}]++-*>[Supplier],[MainSupplier{bg:dodgerblue}]++->[Supplier],[LeaveRequestApproval{bg:dodgerblue}],[ProductsByRating{bg:dodgerblue}]-*>[Product],[Categories34{bg:dodgerblue}]++-*>[Category],[Categories35{bg:dodgerblue}]++-*>[Category],[Product2{bg:orange}],[NullablePrimitiveTypes],[NullablePrimitiveTypes]++-0..1[Color],[NullablePrimitiveTypes]++-0..1[IntegerDecimal],[NonNullablePrimitiveTypes],[NonNullablePrimitiveTypes]++-[Color],[NonNullablePrimitiveTypes]++-[IntegerDecimal],[NonNullablePrimitiveTypes]++-[Text],[Weird{bg:orange}],[Weird]++-[Core.Permission{bg:whitesmoke}],[Weird]++-0..1[Core.Permission{bg:whitesmoke}],[Address],[Address]-0..1>[City],[Address]-0..1>[Region],[Address]-0..1>[Country],[City{bg:orange}],[Region{bg:orange}],[Country{bg:orange}],[Planet{bg:orange}],[NavigationOnly],[NavigationOnly]-0..1>[Planet],[AnnotationOnly],[Order{bg:orange}],[PersonType],[MovieType],[FriendType{bg:orange}],[PersonType]^[DeveloperType],[ScrumTeamType],[ScrumTeamType]++-0..1[DeveloperType],[MovieType]^[ArchivedMovieType],[SomeThingType],[SomeThingType]++-*[PersonType],[SomeThingType]-*>[FriendType],[ChangeTrackingType])\n\n### Legend\n![Legend](https://yuml.me/diagram/plain;dir:TB;scale:60/class/[External.Type{bg:whitesmoke}],[ComplexType],[EntityType{bg:orange}],[EntitySet/Singleton/Operation{bg:dodgerblue}])"
    },
    "schemes": [
        "http"
    ],
    "host": "localhost",
    "basePath": "/service-root",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "tags": [
        {
            "name": "StandardCustomers"
        },
        {
            "name": "PreferredCustomers"
        },
        {
            "name": "Orders"
        },
        {
            "name": "Products"
        },
        {
            "name": "Categories"
        },
        {
            "name": "Suppliers"
        },
        {
            "name": "MainSupplier"
        },
        {
            "name": "Categories34"
        },
        {
            "name": "Categories35"
        }
    ],
    "paths": {
        "/StandardCustomers": {
            "get": {
                "summary": "Get entities from StandardCustomers",
                "tags": [
                    "StandardCustomers"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "ID desc"
                            ]
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of Customer",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/org.example.Customer"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to StandardCustomers",
                "tags": [
                    "StandardCustomers"
                ],
                "parameters": [
                    {
                        "name": "Customer",
                        "in": "body",
                        "description": "New entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Customer-create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Customer"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/StandardCustomers('{ID}')": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get entity from StandardCustomers by key",
                "tags": [
                    "StandardCustomers"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Customer"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in StandardCustomers",
                "tags": [
                    "StandardCustomers"
                ],
                "parameters": [
                    {
                        "name": "Customer",
                        "in": "body",
                        "description": "New property values",
                        "schema": {
                            "$ref": "#/definitions/org.example.Customer-update"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from StandardCustomers",
                "tags": [
                    "StandardCustomers"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/PreferredCustomers": {
            "get": {
                "summary": "Get entities from PreferredCustomers",
                "tags": [
                    "PreferredCustomers"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "ID desc"
                            ]
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of Customer",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/org.example.Customer"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to PreferredCustomers",
                "tags": [
                    "PreferredCustomers"
                ],
                "parameters": [
                    {
                        "name": "Customer",
                        "in": "body",
                        "description": "New entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Customer-create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Customer"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/PreferredCustomers('{ID}')": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get entity from PreferredCustomers by key",
                "tags": [
                    "PreferredCustomers"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Customer"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in PreferredCustomers",
                "tags": [
                    "PreferredCustomers"
                ],
                "parameters": [
                    {
                        "name": "Customer",
                        "in": "body",
                        "description": "New property values",
                        "schema": {
                            "$ref": "#/definitions/org.example.Customer-update"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from PreferredCustomers",
                "tags": [
                    "PreferredCustomers"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Orders": {
            "get": {
                "summary": "Get entities from Orders",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "ID desc"
                            ]
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of Order",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/org.example.Order"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Orders",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "name": "Order",
                        "in": "body",
                        "description": "New entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Order-create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Order"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Orders({ID})": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "integer",
                    "format": "int64"
                }
            ],
            "get": {
                "summary": "Get entity from Orders by key",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Order"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Orders",
                "tags": [
                    "Orders"
                ],
                "parameters": [
                    {
                        "name": "Order",
                        "in": "body",
                        "description": "New property values",
                        "schema": {
                            "$ref": "#/definitions/org.example.Order-update"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Orders",
                "tags": [
                    "Orders"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/TopSellingProducts(Year='{Year}')": {
            "get": {
                "summary": "Return the top-selling products for a given year",
                "description": "The response uses server-driven paging",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "Year",
                        "in": "path",
                        "required": true,
                        "description": "Year in form YYYY",
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 1,
                        "minimum": -9999,
                        "maximum": 9999
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "title": "Collection of Product",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/org.example.Product"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Products": {
            "get": {
                "summary": "Get entities from Products",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "ID desc",
                                "CategoryID",
                                "CategoryID desc"
                            ]
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "CategoryID"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Category",
                                "Supplier"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of Product",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/org.example.Product"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Products",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "Product",
                        "in": "body",
                        "description": "New entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Product-create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Product"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Products/M1.BestSelling()": {
            "get": {
                "summary": "Return the best-selling product in the given collection",
                "tags": [
                    "Products"
                ],
                "parameters": [

                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/org.example.Product"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Products/M1.Replenish": {
            "post": {
                "summary": "Replenish stock for products in the given collection",
                "tags": [
                    "Products"
                ],
                "parameters": [

                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Products('{ID}')": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get entity from Products by key",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "CategoryID"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Category",
                                "Supplier"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Product"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Products",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "Product",
                        "in": "body",
                        "description": "New property values",
                        "schema": {
                            "$ref": "#/definitions/org.example.Product-update"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Products",
                "tags": [
                    "Products"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Products('{ID}')/Category": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get related Category",
                "tags": [
                    "Products",
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Products"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Category"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Products('{ID}')/Supplier": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get related Supplier",
                "tags": [
                    "Products",
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Supplier"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories": {
            "get": {
                "summary": "Get entities from Categories",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "ID desc"
                            ]
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Products"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of Category",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/org.example.Category"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Categories",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "Category",
                        "in": "body",
                        "description": "New entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Category-create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Category"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories('{ID}')": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get entity from Categories by key",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Products"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Category"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Categories",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "Category",
                        "in": "body",
                        "description": "New property values",
                        "schema": {
                            "$ref": "#/definitions/org.example.Category-update"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Categories",
                "tags": [
                    "Categories"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories('{ID}')/Products": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get entities from related Products",
                "tags": [
                    "Categories",
                    "Products"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "ID desc",
                                "CategoryID",
                                "CategoryID desc"
                            ]
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "CategoryID"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Category",
                                "Supplier"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of Product",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/org.example.Product"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to related Products",
                "tags": [
                    "Categories",
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "Product",
                        "in": "body",
                        "description": "New entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Product-create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Product"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories('{ID}')/Products/M1.BestSelling()": {
            "get": {
                "summary": "Return the best-selling product in the given collection",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/org.example.Product"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories('{ID}')/Products/M1.Replenish": {
            "post": {
                "summary": "Replenish stock for products in the given collection",
                "tags": [
                    "Categories"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Suppliers": {
            "get": {
                "summary": "Get entities from Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "ID desc"
                            ]
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of Supplier",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/org.example.Supplier"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "Supplier",
                        "in": "body",
                        "description": "New entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Supplier-create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Supplier"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Suppliers('{ID}')": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get entity from Suppliers by key",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Supplier"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "parameters": [
                    {
                        "name": "Supplier",
                        "in": "body",
                        "description": "New property values",
                        "schema": {
                            "$ref": "#/definitions/org.example.Supplier-update"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Suppliers",
                "tags": [
                    "Suppliers"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/MainSupplier": {
            "get": {
                "summary": "Get MainSupplier",
                "tags": [
                    "MainSupplier"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Supplier"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update MainSupplier",
                "tags": [
                    "MainSupplier"
                ],
                "parameters": [
                    {
                        "name": "Supplier",
                        "in": "body",
                        "description": "New property values",
                        "schema": {
                            "$ref": "#/definitions/org.example.Supplier-update"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/LeaveRequestApproval": {
            "post": {
                "summary": "Invoke action Approval",
                "tags": [
                    "Service Operations"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/ProductsByRating(Rating='{Rating}')": {
            "get": {
                "summary": "Invoke function ProductsByRating",
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "Rating",
                        "in": "path",
                        "required": true,
                        "type": "number",
                        "format": "decimal",
                        "multipleOf": 1,
                        "minimum": -9999,
                        "maximum": 9999
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "title": "Collection of Product",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/org.example.Product"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories34": {
            "get": {
                "summary": "Get entities from Categories34",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "ID desc"
                            ]
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Products"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of Category",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/org.example.Category"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Categories34",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "name": "Category",
                        "in": "body",
                        "description": "New entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Category-create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Category"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories34('{ID}')": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get entity from Categories34 by key",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Products"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Category"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Categories34",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "name": "Category",
                        "in": "body",
                        "description": "New property values",
                        "schema": {
                            "$ref": "#/definitions/org.example.Category-update"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Categories34",
                "tags": [
                    "Categories34"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories34('{ID}')/Products": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get entities from related Products",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "ID desc",
                                "CategoryID",
                                "CategoryID desc"
                            ]
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "CategoryID"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Category",
                                "Supplier"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of Product",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/org.example.Product"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories34('{ID}')/Products/M1.BestSelling()": {
            "get": {
                "summary": "Return the best-selling product in the given collection",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/org.example.Product"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories34('{ID}')/Products/M1.Replenish": {
            "post": {
                "summary": "Replenish stock for products in the given collection",
                "tags": [
                    "Categories34"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories35": {
            "get": {
                "summary": "Get entities from Categories35",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "ID desc"
                            ]
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Products"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of Category",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/org.example.Category"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "post": {
                "summary": "Add new entity to Categories35",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "name": "Category",
                        "in": "body",
                        "description": "New entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Category-create"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Category"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories35('{ID}')": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get entity from Categories35 by key",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Products"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entity",
                        "schema": {
                            "$ref": "#/definitions/org.example.Category"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "patch": {
                "summary": "Update entity in Categories35",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "name": "Category",
                        "in": "body",
                        "description": "New property values",
                        "schema": {
                            "$ref": "#/definitions/org.example.Category-update"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            },
            "delete": {
                "summary": "Delete entity from Categories35",
                "tags": [
                    "Categories35"
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories35('{ID}')/Products": {
            "parameters": [
                {
                    "name": "ID",
                    "in": "path",
                    "required": true,
                    "description": "key: ID",
                    "type": "string"
                }
            ],
            "get": {
                "summary": "Get entities from related Products",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/top"
                    },
                    {
                        "$ref": "#/parameters/skip"
                    },
                    {
                        "$ref": "#/parameters/search"
                    },
                    {
                        "name": "$filter",
                        "in": "query",
                        "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "ID desc",
                                "CategoryID",
                                "CategoryID desc"
                            ]
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "ID",
                                "CategoryID"
                            ]
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                            "type": "string",
                            "enum": [
                                "*",
                                "Category",
                                "Supplier"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retrieved entities",
                        "schema": {
                            "title": "Collection of Product",
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/org.example.Product"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories35('{ID}')/Products/M1.BestSelling()": {
            "get": {
                "summary": "Return the best-selling product in the given collection",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/org.example.Product"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/Categories35('{ID}')/Products/M1.Replenish": {
            "post": {
                "summary": "Replenish stock for products in the given collection",
                "tags": [
                    "Categories35"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "required": true,
                        "description": "key: ID",
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        },
        "/$batch": {
            "post": {
                "summary": "Send a group of requests",
                "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).",
                "tags": [
                    "Batch Requests"
                ],
                "consumes": [
                    "multipart/mixed;boundary=request-separator"
                ],
                "produces": [
                    "multipart/mixed"
                ],
                "parameters": [
                    {
                        "name": "requestBody",
                        "in": "body",
                        "description": "Batch request",
                        "schema": {
                            "type": "string",
                            "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET StandardCustomers HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Batch response",
                        "schema": {
                            "type": "string",
                            "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/error"
                    }
                }
            }
        }
    },
    "definitions": {
        "org.example.Measurement": {
            "type": "object",
            "properties": {
                "Dimension": {
                    "type": "string",
                    "maxLength": 50,
                    "default": "Unspecified"
                },
                "Length": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1.0e-2,
                    "example": 0
                }
            },
            "title": "Measurement"
        },
        "org.example.Measurement-create": {
            "type": "object",
            "properties": {
                "Dimension": {
                    "type": "string",
                    "maxLength": 50,
                    "default": "Unspecified"
                },
                "Length": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1.0e-2,
                    "example": 0
                }
            },
            "title": "Measurement (for create)"
        },
        "org.example.Measurement-update": {
            "type": "object",
            "properties": {
                "Dimension": {
                    "type": "string",
                    "maxLength": 50,
                    "default": "Unspecified"
                },
                "Length": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1.0e-2,
                    "example": 0
                }
            },
            "title": "Measurement (for update)"
        },
        "org.example.Example7to11": {
            "type": "object",
            "properties": {
                "Units": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "SuggestedTimes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z"
                    }
                },
                "Amount9": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1.0e-2,
                    "minimum": -9.99,
                    "maximum": 9.99,
                    "example": 0
                },
                "Amount11": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "minimum": -999,
                    "maximum": 999,
                    "example": 0
                }
            },
            "title": "Example7to11"
        },
        "org.example.Example7to11-create": {
            "type": "object",
            "properties": {
                "Units": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "SuggestedTimes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z"
                    }
                },
                "Amount9": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1.0e-2,
                    "minimum": -9.99,
                    "maximum": 9.99,
                    "example": 0
                },
                "Amount11": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "minimum": -999,
                    "maximum": 999,
                    "example": 0
                }
            },
            "title": "Example7to11 (for create)"
        },
        "org.example.Example7to11-update": {
            "type": "object",
            "properties": {
                "Units": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "SuggestedTimes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-04-13T15:51:04Z"
                    }
                },
                "Amount9": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1.0e-2,
                    "minimum": -9.99,
                    "maximum": 9.99,
                    "example": 0
                },
                "Amount11": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "minimum": -999,
                    "maximum": 999,
                    "example": 0
                }
            },
            "title": "Example7to11 (for update)"
        },
        "org.example.Product": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "CategoryID": {
                    "type": "string"
                },
                "Category": {
                    "$ref": "#/definitions/org.example.Category"
                },
                "Supplier": {
                    "$ref": "#/definitions/org.example.Supplier"
                }
            },
            "title": "Product"
        },
        "org.example.Product-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "CategoryID": {
                    "type": "string"
                },
                "Category": {
                    "$ref": "#/definitions/org.example.Category-create"
                },
                "Supplier": {
                    "$ref": "#/definitions/org.example.Supplier-create"
                }
            },
            "required": [
                "ID"
            ],
            "title": "Product (for create)"
        },
        "org.example.Product-update": {
            "type": "object",
            "properties": {
                "CategoryID": {
                    "type": "string"
                }
            },
            "title": "Product (for update)"
        },
        "org.example.Supplier": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                }
            },
            "title": "Supplier"
        },
        "org.example.Supplier-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                }
            },
            "required": [
                "ID"
            ],
            "title": "Supplier (for create)"
        },
        "org.example.Supplier-update": {
            "type": "object",
            "title": "Supplier (for update)"
        },
        "org.example.Customer": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                }
            },
            "title": "Customer"
        },
        "org.example.Customer-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                }
            },
            "required": [
                "ID"
            ],
            "title": "Customer (for create)"
        },
        "org.example.Customer-update": {
            "type": "object",
            "title": "Customer (for update)"
        },
        "org.example.Order": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": [
                        "integer",
                        "string"
                    ],
                    "format": "int64",
                    "example": "42"
                }
            },
            "title": "Order"
        },
        "org.example.Order-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": [
                        "integer",
                        "string"
                    ],
                    "format": "int64",
                    "example": "42"
                }
            },
            "required": [
                "ID"
            ],
            "title": "Order (for create)"
        },
        "org.example.Order-update": {
            "type": "object",
            "title": "Order (for update)"
        },
        "org.example.Category": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "Products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/org.example.Product"
                    }
                }
            },
            "title": "Category"
        },
        "org.example.Category-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "Products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/org.example.Product-create"
                    }
                }
            },
            "required": [
                "ID"
            ],
            "title": "Category (for create)"
        },
        "org.example.Category-update": {
            "type": "object",
            "title": "Category (for update)"
        },
        "org.example.Employee": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "Manager": {
                    "$ref": "#/definitions/org.example.Manager"
                }
            },
            "title": "Employee"
        },
        "org.example.Employee-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "Manager": {
                    "$ref": "#/definitions/org.example.Manager-create"
                }
            },
            "required": [
                "ID"
            ],
            "title": "Employee (for create)"
        },
        "org.example.Employee-update": {
            "type": "object",
            "properties": {
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                }
            },
            "title": "Employee (for update)"
        },
        "org.example.Manager": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "Manager": {
                    "$ref": "#/definitions/org.example.Manager"
                },
                "AnnualBudget": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                },
                "Employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/org.example.Employee"
                    }
                }
            },
            "title": "Manager"
        },
        "org.example.Manager-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "Manager": {
                    "$ref": "#/definitions/org.example.Manager-create"
                },
                "AnnualBudget": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                },
                "Employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/org.example.Employee-create"
                    }
                }
            },
            "required": [
                "ID"
            ],
            "title": "Manager (for create)"
        },
        "org.example.Manager-update": {
            "type": "object",
            "properties": {
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "AnnualBudget": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                }
            },
            "title": "Manager (for update)"
        },
        "org.example.Category17": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                }
            },
            "title": "Category17"
        },
        "org.example.Category17-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                }
            },
            "required": [
                "ID"
            ],
            "title": "Category17 (for create)"
        },
        "org.example.Category17-update": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                }
            },
            "title": "Category17 (for update)"
        },
        "org.example.Category18": {
            "type": "object",
            "properties": {
                "Info": {
                    "$ref": "#/definitions/org.example.EntityInfo"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                }
            },
            "title": "Category18"
        },
        "org.example.Category18-create": {
            "type": "object",
            "properties": {
                "Info": {
                    "$ref": "#/definitions/org.example.EntityInfo-create"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                }
            },
            "title": "Category18 (for create)"
        },
        "org.example.Category18-update": {
            "type": "object",
            "properties": {
                "Info": {
                    "$ref": "#/definitions/org.example.EntityInfo-update"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                }
            },
            "title": "Category18 (for update)"
        },
        "org.example.EntityInfo": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Created": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date-time",
                    "example": "2017-04-13T15:51:04Z"
                }
            },
            "title": "EntityInfo"
        },
        "org.example.EntityInfo-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Created": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date-time",
                    "example": "2017-04-13T15:51:04Z"
                }
            },
            "title": "EntityInfo (for create)"
        },
        "org.example.EntityInfo-update": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Created": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date-time",
                    "example": "2017-04-13T15:51:04Z"
                }
            },
            "title": "EntityInfo (for update)"
        },
        "org.example.OrderLine": {
            "type": "object",
            "properties": {
                "OrderID": {
                    "type": "integer",
                    "format": "int32"
                },
                "LineNumber": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "title": "OrderLine"
        },
        "org.example.OrderLine-create": {
            "type": "object",
            "properties": {
                "OrderID": {
                    "type": "integer",
                    "format": "int32"
                },
                "LineNumber": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "required": [
                "OrderID",
                "LineNumber"
            ],
            "title": "OrderLine (for create)"
        },
        "org.example.OrderLine-update": {
            "type": "object",
            "title": "OrderLine (for update)"
        },
        "org.example.Dimensions": {
            "type": "object",
            "properties": {
                "Height": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                },
                "Weight": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                },
                "Length": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                }
            },
            "title": "Dimensions"
        },
        "org.example.Dimensions-create": {
            "type": "object",
            "properties": {
                "Height": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                },
                "Weight": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                },
                "Length": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                }
            },
            "title": "Dimensions (for create)"
        },
        "org.example.Dimensions-update": {
            "type": "object",
            "properties": {
                "Height": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                },
                "Weight": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                },
                "Length": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                }
            },
            "title": "Dimensions (for update)"
        },
        "org.example.Product22": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "ProductDimensions": {
                    "$ref": "#/definitions/org.example.Dimensions"
                },
                "ShippingDimensions": {
                    "$ref": "#/definitions/org.example.Dimensions"
                }
            },
            "title": "Product22"
        },
        "org.example.Product22-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "ProductDimensions": {
                    "$ref": "#/definitions/org.example.Dimensions-create"
                },
                "ShippingDimensions": {
                    "$ref": "#/definitions/org.example.Dimensions-create"
                }
            },
            "required": [
                "ID"
            ],
            "title": "Product22 (for create)"
        },
        "org.example.Product22-update": {
            "type": "object",
            "properties": {
                "ProductDimensions": {
                    "$ref": "#/definitions/org.example.Dimensions-update"
                },
                "ShippingDimensions": {
                    "$ref": "#/definitions/org.example.Dimensions-update"
                }
            },
            "title": "Product22 (for update)"
        },
        "org.example.ShipmentBox": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "Dimensions": {
                    "$ref": "#/definitions/org.example.Dimensions"
                }
            },
            "title": "ShipmentBox"
        },
        "org.example.ShipmentBox-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "Dimensions": {
                    "$ref": "#/definitions/org.example.Dimensions-create"
                }
            },
            "required": [
                "ID"
            ],
            "title": "ShipmentBox (for create)"
        },
        "org.example.ShipmentBox-update": {
            "type": "object",
            "properties": {
                "Dimensions": {
                    "$ref": "#/definitions/org.example.Dimensions-update"
                }
            },
            "title": "ShipmentBox (for update)"
        },
        "org.example.FileAccess": {
            "type": "string",
            "enum": [
                "Read",
                "Write",
                "Create",
                "Delete"
            ],
            "title": "FileAccess"
        },
        "org.example.ShippingMethod": {
            "type": "string",
            "enum": [
                "FirstClass",
                "TwoDay",
                "Overnight"
            ],
            "title": "Method of shipping"
        },
        "org.example.Pattern": {
            "type": "string",
            "enum": [
                "Plain",
                "Red",
                "Blue",
                "Yellow",
                "Solid",
                "Striped",
                "SolidRed",
                "SolidBlue",
                "SolidYellow",
                "RedBlueStriped",
                "RedYellowStriped",
                "BlueYellowStriped"
            ],
            "title": "Pattern"
        },
        "org.example.Length": {
            "type": "integer",
            "format": "int32",
            "title": "Length"
        },
        "org.example.Weight": {
            "type": "integer",
            "format": "int32",
            "title": "Weight"
        },
        "org.example.Size": {
            "type": "object",
            "properties": {
                "Height": {
                    "$ref": "#/definitions/org.example.Length"
                },
                "Weight": {
                    "$ref": "#/definitions/org.example.Weight"
                }
            },
            "title": "Size"
        },
        "org.example.Size-create": {
            "type": "object",
            "properties": {
                "Height": {
                    "$ref": "#/definitions/org.example.Length"
                },
                "Weight": {
                    "$ref": "#/definitions/org.example.Weight"
                }
            },
            "title": "Size (for create)"
        },
        "org.example.Size-update": {
            "type": "object",
            "properties": {
                "Height": {
                    "$ref": "#/definitions/org.example.Length"
                },
                "Weight": {
                    "$ref": "#/definitions/org.example.Weight"
                }
            },
            "title": "Size (for update)"
        },
        "geoPoint": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "Point"
                    ],
                    "default": "Point"
                },
                "coordinates": {
                    "$ref": "#/definitions/geoPosition"
                }
            },
            "required": [
                "type",
                "coordinates"
            ]
        },
        "geoPosition": {
            "type": "array",
            "items": {
                "type": "number"
            },
            "minItems": 2
        },
        "error": {
            "type": "object",
            "required": [
                "error"
            ],
            "properties": {
                "error": {
                    "type": "object",
                    "required": [
                        "code",
                        "message"
                    ],
                    "properties": {
                        "code": {
                            "type": "string"
                        },
                        "message": {
                            "type": "string"
                        },
                        "target": {
                            "type": "string"
                        },
                        "details": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "code",
                                    "message"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string"
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "target": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "innererror": {
                            "type": "object",
                            "description": "The structure of this object is service-specific"
                        }
                    }
                }
            }
        },
        "org.example.Product2": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Description": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                }
            },
            "title": "Product2"
        },
        "org.example.Product2-create": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Description": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                }
            },
            "required": [
                "ID"
            ],
            "title": "Product2 (for create)"
        },
        "org.example.Product2-update": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Description": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                }
            },
            "title": "Product2 (for update)"
        },
        "Model1.NullablePrimitiveTypes": {
            "type": "object",
            "properties": {
                "NullValue": {
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "default": null
                },
                "TrueValue": {
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "default": true
                },
                "FalseValue": {
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "default": false
                },
                "BinaryValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "base64url",
                    "maxLength": 42,
                    "default": "T0RhdGE"
                },
                "IntegerValue": {
                    "type": [
                        "integer",
                        "null"
                    ],
                    "format": "int32",
                    "default": -128
                },
                "DoubleValue": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "double",
                    "example": 3.14,
                    "default": 3.1415926535897931
                },
                "SingleValue": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "float",
                    "example": 3.14
                },
                "DecimalValue": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "example": 0,
                    "default": 34.95
                },
                "StringValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string",
                    "default": "Say \"Hello\",\nthen go"
                },
                "DateValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date",
                    "example": "2017-04-13",
                    "default": "2012-12-03"
                },
                "DateTimeOffsetValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date-time",
                    "example": "2017-04-13T15:51:04Z",
                    "default": "2012-12-03T07:16:23Z"
                },
                "DurationValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "duration",
                    "example": "P4DT15H51M04S",
                    "default": "P12DT23H59M59.999999999999S"
                },
                "TimeOfDayValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "time",
                    "example": "15:51:04",
                    "default": "07:59:59.999"
                },
                "GuidValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "uuid",
                    "example": "01234567-89ab-cdef-0123-456789abcdef",
                    "default": "01234567-89ab-cdef-0123-456789abcdef"
                },
                "Int64Value": {
                    "type": [
                        "integer",
                        "string",
                        "null"
                    ],
                    "format": "int64",
                    "example": "42",
                    "default": 0
                },
                "ColorEnumValue": {
                    "$ref": "#/definitions/Model1.Color",
                    "default": "yellow"
                },
                "GeographyPoint": {
                    "$ref": "#/definitions/geoPoint",
                    "default": "SRID=0;Point(142.1 64.1)"
                },
                "StreamValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "base64url"
                },
                "TypeDefValue": {
                    "$ref": "#/definitions/Model1.IntegerDecimal",
                    "default": 42
                },
                "PrimitiveValue": {
                    "type": [
                        "boolean",
                        "number",
                        "string",
                        "null"
                    ]
                }
            },
            "title": "NullablePrimitiveTypes"
        },
        "Model1.NullablePrimitiveTypes-create": {
            "type": "object",
            "properties": {
                "NullValue": {
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "default": null
                },
                "TrueValue": {
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "default": true
                },
                "FalseValue": {
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "default": false
                },
                "BinaryValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "base64url",
                    "maxLength": 42,
                    "default": "T0RhdGE"
                },
                "IntegerValue": {
                    "type": [
                        "integer",
                        "null"
                    ],
                    "format": "int32",
                    "default": -128
                },
                "DoubleValue": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "double",
                    "example": 3.14,
                    "default": 3.1415926535897931
                },
                "SingleValue": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "float",
                    "example": 3.14
                },
                "DecimalValue": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "example": 0,
                    "default": 34.95
                },
                "StringValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string",
                    "default": "Say \"Hello\",\nthen go"
                },
                "DateValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date",
                    "example": "2017-04-13",
                    "default": "2012-12-03"
                },
                "DateTimeOffsetValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date-time",
                    "example": "2017-04-13T15:51:04Z",
                    "default": "2012-12-03T07:16:23Z"
                },
                "DurationValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "duration",
                    "example": "P4DT15H51M04S",
                    "default": "P12DT23H59M59.999999999999S"
                },
                "TimeOfDayValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "time",
                    "example": "15:51:04",
                    "default": "07:59:59.999"
                },
                "GuidValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "uuid",
                    "example": "01234567-89ab-cdef-0123-456789abcdef",
                    "default": "01234567-89ab-cdef-0123-456789abcdef"
                },
                "Int64Value": {
                    "type": [
                        "integer",
                        "string",
                        "null"
                    ],
                    "format": "int64",
                    "example": "42",
                    "default": 0
                },
                "ColorEnumValue": {
                    "$ref": "#/definitions/Model1.Color",
                    "default": "yellow"
                },
                "GeographyPoint": {
                    "$ref": "#/definitions/geoPoint",
                    "default": "SRID=0;Point(142.1 64.1)"
                },
                "StreamValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "base64url"
                },
                "TypeDefValue": {
                    "$ref": "#/definitions/Model1.IntegerDecimal",
                    "default": 42
                },
                "PrimitiveValue": {
                    "type": [
                        "boolean",
                        "number",
                        "string",
                        "null"
                    ]
                }
            },
            "title": "NullablePrimitiveTypes (for create)"
        },
        "Model1.NullablePrimitiveTypes-update": {
            "type": "object",
            "properties": {
                "NullValue": {
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "default": null
                },
                "TrueValue": {
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "default": true
                },
                "FalseValue": {
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "default": false
                },
                "BinaryValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "base64url",
                    "maxLength": 42,
                    "default": "T0RhdGE"
                },
                "IntegerValue": {
                    "type": [
                        "integer",
                        "null"
                    ],
                    "format": "int32",
                    "default": -128
                },
                "DoubleValue": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "double",
                    "example": 3.14,
                    "default": 3.1415926535897931
                },
                "SingleValue": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "float",
                    "example": 3.14
                },
                "DecimalValue": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "example": 0,
                    "default": 34.95
                },
                "StringValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string",
                    "default": "Say \"Hello\",\nthen go"
                },
                "DateValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date",
                    "example": "2017-04-13",
                    "default": "2012-12-03"
                },
                "DateTimeOffsetValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date-time",
                    "example": "2017-04-13T15:51:04Z",
                    "default": "2012-12-03T07:16:23Z"
                },
                "DurationValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "duration",
                    "example": "P4DT15H51M04S",
                    "default": "P12DT23H59M59.999999999999S"
                },
                "TimeOfDayValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "time",
                    "example": "15:51:04",
                    "default": "07:59:59.999"
                },
                "GuidValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "uuid",
                    "example": "01234567-89ab-cdef-0123-456789abcdef",
                    "default": "01234567-89ab-cdef-0123-456789abcdef"
                },
                "Int64Value": {
                    "type": [
                        "integer",
                        "string",
                        "null"
                    ],
                    "format": "int64",
                    "example": "42",
                    "default": 0
                },
                "ColorEnumValue": {
                    "$ref": "#/definitions/Model1.Color",
                    "default": "yellow"
                },
                "GeographyPoint": {
                    "$ref": "#/definitions/geoPoint",
                    "default": "SRID=0;Point(142.1 64.1)"
                },
                "StreamValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "base64url"
                },
                "TypeDefValue": {
                    "$ref": "#/definitions/Model1.IntegerDecimal",
                    "default": 42
                },
                "PrimitiveValue": {
                    "type": [
                        "boolean",
                        "number",
                        "string",
                        "null"
                    ]
                }
            },
            "title": "NullablePrimitiveTypes (for update)"
        },
        "Model1.NonNullablePrimitiveTypes": {
            "type": "object",
            "properties": {
                "NullValue": {
                    "type": "boolean",
                    "default": null
                },
                "TrueValue": {
                    "type": "boolean",
                    "default": true
                },
                "FalseValue": {
                    "type": "boolean",
                    "default": false
                },
                "BinaryValue": {
                    "type": "string",
                    "format": "base64url",
                    "maxLength": 42,
                    "default": "T0RhdGE"
                },
                "IntegerValue": {
                    "type": "integer",
                    "format": "int32",
                    "default": -128
                },
                "DoubleValue": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "double",
                    "example": 3.14,
                    "default": 3.1415926535897931
                },
                "SingleValue": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "float",
                    "example": 3.14,
                    "default": "-INF"
                },
                "DecimalValue": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "example": 0,
                    "default": 34.95
                },
                "StringValue": {
                    "type": "string",
                    "default": "Say \"Hello\",\nthen go"
                },
                "DateValue": {
                    "type": "string",
                    "format": "date",
                    "example": "2017-04-13",
                    "default": "2012-12-03"
                },
                "DateTimeOffsetValue": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-04-13T15:51:04Z",
                    "default": "2012-12-03T07:16:23Z"
                },
                "DurationValue": {
                    "type": "string",
                    "format": "duration",
                    "example": "P4DT15H51M04S",
                    "default": "P12DT23H59M59.999999999999S"
                },
                "TimeOfDayValue": {
                    "type": "string",
                    "format": "time",
                    "example": "15:51:04",
                    "default": "07:59:59.999"
                },
                "GuidValue": {
                    "type": "string",
                    "format": "uuid",
                    "example": "01234567-89ab-cdef-0123-456789abcdef",
                    "default": "01234567-89ab-cdef-0123-456789abcdef"
                },
                "Int64Value": {
                    "type": [
                        "integer",
                        "string"
                    ],
                    "format": "int64",
                    "example": "42",
                    "default": 0
                },
                "ColorEnumValue": {
                    "$ref": "#/definitions/Model1.Color",
                    "default": "yellow"
                },
                "GeographyPoint": {
                    "$ref": "#/definitions/geoPoint",
                    "default": "SRID=0;Point(142.1 64.1)"
                },
                "StreamValue": {
                    "type": "string",
                    "format": "base64url"
                },
                "TypeDefValue": {
                    "$ref": "#/definitions/Model1.IntegerDecimal",
                    "default": 42
                },
                "TextValue": {
                    "$ref": "#/definitions/Model1.Text",
                    "maxLength": 60,
                    "default": 42
                },
                "PrimitiveValue": {
                    "type": [
                        "boolean",
                        "number",
                        "string"
                    ]
                }
            },
            "title": "NonNullablePrimitiveTypes"
        },
        "Model1.NonNullablePrimitiveTypes-create": {
            "type": "object",
            "properties": {
                "NullValue": {
                    "type": "boolean",
                    "default": null
                },
                "TrueValue": {
                    "type": "boolean",
                    "default": true
                },
                "FalseValue": {
                    "type": "boolean",
                    "default": false
                },
                "BinaryValue": {
                    "type": "string",
                    "format": "base64url",
                    "maxLength": 42,
                    "default": "T0RhdGE"
                },
                "IntegerValue": {
                    "type": "integer",
                    "format": "int32",
                    "default": -128
                },
                "DoubleValue": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "double",
                    "example": 3.14,
                    "default": 3.1415926535897931
                },
                "SingleValue": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "float",
                    "example": 3.14,
                    "default": "-INF"
                },
                "DecimalValue": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "example": 0,
                    "default": 34.95
                },
                "StringValue": {
                    "type": "string",
                    "default": "Say \"Hello\",\nthen go"
                },
                "DateValue": {
                    "type": "string",
                    "format": "date",
                    "example": "2017-04-13",
                    "default": "2012-12-03"
                },
                "DateTimeOffsetValue": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-04-13T15:51:04Z",
                    "default": "2012-12-03T07:16:23Z"
                },
                "DurationValue": {
                    "type": "string",
                    "format": "duration",
                    "example": "P4DT15H51M04S",
                    "default": "P12DT23H59M59.999999999999S"
                },
                "TimeOfDayValue": {
                    "type": "string",
                    "format": "time",
                    "example": "15:51:04",
                    "default": "07:59:59.999"
                },
                "GuidValue": {
                    "type": "string",
                    "format": "uuid",
                    "example": "01234567-89ab-cdef-0123-456789abcdef",
                    "default": "01234567-89ab-cdef-0123-456789abcdef"
                },
                "Int64Value": {
                    "type": [
                        "integer",
                        "string"
                    ],
                    "format": "int64",
                    "example": "42",
                    "default": 0
                },
                "ColorEnumValue": {
                    "$ref": "#/definitions/Model1.Color",
                    "default": "yellow"
                },
                "GeographyPoint": {
                    "$ref": "#/definitions/geoPoint",
                    "default": "SRID=0;Point(142.1 64.1)"
                },
                "StreamValue": {
                    "type": "string",
                    "format": "base64url"
                },
                "TypeDefValue": {
                    "$ref": "#/definitions/Model1.IntegerDecimal",
                    "default": 42
                },
                "TextValue": {
                    "$ref": "#/definitions/Model1.Text",
                    "maxLength": 60,
                    "default": 42
                },
                "PrimitiveValue": {
                    "type": [
                        "boolean",
                        "number",
                        "string"
                    ]
                }
            },
            "title": "NonNullablePrimitiveTypes (for create)"
        },
        "Model1.NonNullablePrimitiveTypes-update": {
            "type": "object",
            "properties": {
                "NullValue": {
                    "type": "boolean",
                    "default": null
                },
                "TrueValue": {
                    "type": "boolean",
                    "default": true
                },
                "FalseValue": {
                    "type": "boolean",
                    "default": false
                },
                "BinaryValue": {
                    "type": "string",
                    "format": "base64url",
                    "maxLength": 42,
                    "default": "T0RhdGE"
                },
                "IntegerValue": {
                    "type": "integer",
                    "format": "int32",
                    "default": -128
                },
                "DoubleValue": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "double",
                    "example": 3.14,
                    "default": 3.1415926535897931
                },
                "SingleValue": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "float",
                    "example": 3.14,
                    "default": "-INF"
                },
                "DecimalValue": {
                    "type": [
                        "number",
                        "string"
                    ],
                    "format": "decimal",
                    "example": 0,
                    "default": 34.95
                },
                "StringValue": {
                    "type": "string",
                    "default": "Say \"Hello\",\nthen go"
                },
                "DateValue": {
                    "type": "string",
                    "format": "date",
                    "example": "2017-04-13",
                    "default": "2012-12-03"
                },
                "DateTimeOffsetValue": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2017-04-13T15:51:04Z",
                    "default": "2012-12-03T07:16:23Z"
                },
                "DurationValue": {
                    "type": "string",
                    "format": "duration",
                    "example": "P4DT15H51M04S",
                    "default": "P12DT23H59M59.999999999999S"
                },
                "TimeOfDayValue": {
                    "type": "string",
                    "format": "time",
                    "example": "15:51:04",
                    "default": "07:59:59.999"
                },
                "GuidValue": {
                    "type": "string",
                    "format": "uuid",
                    "example": "01234567-89ab-cdef-0123-456789abcdef",
                    "default": "01234567-89ab-cdef-0123-456789abcdef"
                },
                "Int64Value": {
                    "type": [
                        "integer",
                        "string"
                    ],
                    "format": "int64",
                    "example": "42",
                    "default": 0
                },
                "ColorEnumValue": {
                    "$ref": "#/definitions/Model1.Color",
                    "default": "yellow"
                },
                "GeographyPoint": {
                    "$ref": "#/definitions/geoPoint",
                    "default": "SRID=0;Point(142.1 64.1)"
                },
                "StreamValue": {
                    "type": "string",
                    "format": "base64url"
                },
                "TypeDefValue": {
                    "$ref": "#/definitions/Model1.IntegerDecimal",
                    "default": 42
                },
                "TextValue": {
                    "$ref": "#/definitions/Model1.Text",
                    "maxLength": 60,
                    "default": 42
                },
                "PrimitiveValue": {
                    "type": [
                        "boolean",
                        "number",
                        "string"
                    ]
                }
            },
            "title": "NonNullablePrimitiveTypes (for update)"
        },
        "Model1.Size": {
            "type": "string",
            "enum": [
                "S",
                "M",
                "L"
            ],
            "title": "T-Shirt Size",
            "description": "Size, expressed with letters familiar from e.g. T-Shirt sizes"
        },
        "Model1.Color": {
            "type": "string",
            "enum": [
                "Yellow",
                "Striped"
            ],
            "title": "Color"
        },
        "Model1.Weird": {
            "type": "object",
            "properties": {
                "TheKey": {
                    "type": "string",
                    "pattern": ".+"
                },
                "TheValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "TheString": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "maxLength": 20,
                    "enum": [
                        "success",
                        "info",
                        "warning",
                        "error"
                    ],
                    "example": "string"
                },
                "Tags": {
                    "type": "array",
                    "items": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "example": "string"
                    }
                },
                "Dates": {
                    "type": "array",
                    "items": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date",
                        "example": "2017-04-13"
                    }
                },
                "Price": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1.0e-3,
                    "minimum": 0,
                    "maximum": 999999999999.999,
                    "example": 0
                },
                "Quantity": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1.0e-3,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "maximum": 999999999999.999,
                    "example": 0
                },
                "PercentComplete": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "minimum": 0,
                    "maximum": 100,
                    "example": 0
                },
                "PercentOfLightSpeed": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "minimum": 0,
                    "maximum": 100,
                    "exclusiveMaximum": true,
                    "example": 0
                },
                "Permission": {
                    "$ref": "/vocabularies/Org.OData.Core.V1.openapi.json#/definitions/Org.OData.Core.V1.Permission"
                },
                "AliasPermission": {
                    "$ref": "/vocabularies/Org.OData.Core.V1.openapi.json#/definitions/Org.OData.Core.V1.Permission"
                }
            },
            "title": "Weird"
        },
        "Model1.Weird-create": {
            "type": "object",
            "properties": {
                "TheKey": {
                    "type": "string",
                    "pattern": ".+"
                },
                "TheValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "TheString": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "maxLength": 20,
                    "enum": [
                        "success",
                        "info",
                        "warning",
                        "error"
                    ],
                    "example": "string"
                },
                "Tags": {
                    "type": "array",
                    "items": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "example": "string"
                    }
                },
                "Dates": {
                    "type": "array",
                    "items": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date",
                        "example": "2017-04-13"
                    }
                },
                "Price": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1.0e-3,
                    "minimum": 0,
                    "maximum": 999999999999.999,
                    "example": 0
                },
                "Quantity": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1.0e-3,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "maximum": 999999999999.999,
                    "example": 0
                },
                "PercentComplete": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "minimum": 0,
                    "maximum": 100,
                    "example": 0
                },
                "PercentOfLightSpeed": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "minimum": 0,
                    "maximum": 100,
                    "exclusiveMaximum": true,
                    "example": 0
                },
                "Permission": {
                    "$ref": "/vocabularies/Org.OData.Core.V1.openapi.json#/definitions/Org.OData.Core.V1.Permission"
                },
                "AliasPermission": {
                    "$ref": "/vocabularies/Org.OData.Core.V1.openapi.json#/definitions/Org.OData.Core.V1.Permission"
                }
            },
            "required": [
                "TheKey"
            ],
            "title": "Weird (for create)"
        },
        "Model1.Weird-update": {
            "type": "object",
            "properties": {
                "TheValue": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "TheString": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "maxLength": 20,
                    "enum": [
                        "success",
                        "info",
                        "warning",
                        "error"
                    ],
                    "example": "string"
                },
                "Tags": {
                    "type": "array",
                    "items": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "example": "string"
                    }
                },
                "Dates": {
                    "type": "array",
                    "items": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date",
                        "example": "2017-04-13"
                    }
                },
                "Price": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1.0e-3,
                    "minimum": 0,
                    "maximum": 999999999999.999,
                    "example": 0
                },
                "Quantity": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1.0e-3,
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "maximum": 999999999999.999,
                    "example": 0
                },
                "PercentComplete": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "minimum": 0,
                    "maximum": 100,
                    "example": 0
                },
                "PercentOfLightSpeed": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "minimum": 0,
                    "maximum": 100,
                    "exclusiveMaximum": true,
                    "example": 0
                },
                "Permission": {
                    "$ref": "/vocabularies/Org.OData.Core.V1.openapi.json#/definitions/Org.OData.Core.V1.Permission"
                },
                "AliasPermission": {
                    "$ref": "/vocabularies/Org.OData.Core.V1.openapi.json#/definitions/Org.OData.Core.V1.Permission"
                }
            },
            "title": "Weird (for update)"
        },
        "Model1.Address": {
            "type": "object",
            "properties": {
                "Street": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "City": {
                    "$ref": "#/definitions/Model1.City"
                },
                "Region": {
                    "$ref": "#/definitions/Model1.Region"
                },
                "Country": {
                    "$ref": "#/definitions/Model1.Country"
                },
                "MapLocation": {
                    "$ref": "#/definitions/geoPoint"
                },
                "Numbers": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int16"
                    }
                }
            },
            "title": "Address"
        },
        "Model1.Address-create": {
            "type": "object",
            "properties": {
                "Street": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "City": {
                    "$ref": "#/definitions/Model1.City-create"
                },
                "Region": {
                    "$ref": "#/definitions/Model1.Region-create"
                },
                "Country": {
                    "$ref": "#/definitions/Model1.Country-create"
                },
                "MapLocation": {
                    "$ref": "#/definitions/geoPoint"
                },
                "Numbers": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int16"
                    }
                }
            },
            "title": "Address (for create)"
        },
        "Model1.Address-update": {
            "type": "object",
            "properties": {
                "Street": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "MapLocation": {
                    "$ref": "#/definitions/geoPoint"
                },
                "Numbers": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int16"
                    }
                }
            },
            "title": "Address (for update)"
        },
        "Model1.City": {
            "type": "object",
            "title": "City"
        },
        "Model1.City-create": {
            "type": "object",
            "title": "City (for create)"
        },
        "Model1.City-update": {
            "type": "object",
            "title": "City (for update)"
        },
        "Model1.Region": {
            "type": "object",
            "title": "Region"
        },
        "Model1.Region-create": {
            "type": "object",
            "title": "Region (for create)"
        },
        "Model1.Region-update": {
            "type": "object",
            "title": "Region (for update)"
        },
        "Model1.Country": {
            "type": "object",
            "title": "Country"
        },
        "Model1.Country-create": {
            "type": "object",
            "title": "Country (for create)"
        },
        "Model1.Country-update": {
            "type": "object",
            "title": "Country (for update)"
        },
        "Model1.Planet": {
            "type": "object",
            "title": "Planet"
        },
        "Model1.Planet-create": {
            "type": "object",
            "title": "Planet (for create)"
        },
        "Model1.Planet-update": {
            "type": "object",
            "title": "Planet (for update)"
        },
        "Model1.NavigationOnly": {
            "type": "object",
            "properties": {
                "Planet": {
                    "$ref": "#/definitions/Model1.Planet"
                }
            },
            "title": "NavigationOnly"
        },
        "Model1.NavigationOnly-create": {
            "type": "object",
            "properties": {
                "Planet": {
                    "$ref": "#/definitions/Model1.Planet-create"
                }
            },
            "title": "NavigationOnly (for create)"
        },
        "Model1.NavigationOnly-update": {
            "type": "object",
            "title": "NavigationOnly (for update)"
        },
        "Model1.AnnotationOnly": {
            "type": "object",
            "title": "AnnotationOnly"
        },
        "Model1.AnnotationOnly-create": {
            "type": "object",
            "title": "AnnotationOnly (for create)"
        },
        "Model1.AnnotationOnly-update": {
            "type": "object",
            "title": "AnnotationOnly (for update)"
        },
        "Model1.Order": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                },
                "ShippingUnit": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string",
                    "title": "Contains the unit for property Quantity"
                }
            },
            "title": "Order"
        },
        "Model1.Order-create": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                },
                "ShippingUnit": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string",
                    "title": "Contains the unit for property Quantity"
                }
            },
            "title": "Order (for create)"
        },
        "Model1.Order-update": {
            "type": "object",
            "properties": {
                "Quantity": {
                    "type": [
                        "number",
                        "string",
                        "null"
                    ],
                    "format": "decimal",
                    "multipleOf": 1,
                    "example": 0
                },
                "ShippingUnit": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string",
                    "title": "Contains the unit for property Quantity"
                }
            },
            "title": "Order (for update)"
        },
        "Model1.SpecialByte": {
            "type": "integer",
            "format": "uint8",
            "title": "SpecialByte"
        },
        "Model1.Text50": {
            "type": "string",
            "maxLength": 50,
            "title": "Text50"
        },
        "Model1.Text": {
            "type": "string",
            "title": "Text"
        },
        "Model1.LanguageDependentText": {
            "type": "string",
            "title": "LanguageDependentText"
        },
        "Model1.IntegerDecimal": {
            "type": [
                "number",
                "string"
            ],
            "format": "decimal",
            "multipleOf": 1,
            "example": 0,
            "title": "A decimal without fractional part"
        },
        "Model1.IntegerDecimal10": {
            "type": [
                "number",
                "string"
            ],
            "format": "decimal",
            "multipleOf": 1,
            "minimum": -9999999999,
            "maximum": 9999999999,
            "example": 0,
            "title": "A ten-digit integer"
        },
        "Model1.VariableDecimal": {
            "type": [
                "number",
                "string"
            ],
            "format": "decimal",
            "example": 0,
            "title": "A floating decimal"
        },
        "Model1.ExactTimestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04Z",
            "title": "ExactTimestamp"
        },
        "X.PersonType": {
            "type": "object",
            "title": "PersonType"
        },
        "X.PersonType-create": {
            "type": "object",
            "title": "PersonType (for create)"
        },
        "X.PersonType-update": {
            "type": "object",
            "title": "PersonType (for update)"
        },
        "X.MovieType": {
            "type": "object",
            "title": "MovieType"
        },
        "X.MovieType-create": {
            "type": "object",
            "title": "MovieType (for create)"
        },
        "X.MovieType-update": {
            "type": "object",
            "title": "MovieType (for update)"
        },
        "X.FriendType": {
            "type": "object",
            "title": "FriendType"
        },
        "X.FriendType-create": {
            "type": "object",
            "title": "FriendType (for create)"
        },
        "X.FriendType-update": {
            "type": "object",
            "title": "FriendType (for update)"
        },
        "Y.DeveloperType": {
            "type": "object",
            "title": "DeveloperType"
        },
        "Y.DeveloperType-create": {
            "type": "object",
            "title": "DeveloperType (for create)"
        },
        "Y.DeveloperType-update": {
            "type": "object",
            "title": "DeveloperType (for update)"
        },
        "Y.ScrumTeamType": {
            "type": "object",
            "properties": {
                "ScrumMaster": {
                    "$ref": "#/definitions/Y.DeveloperType"
                }
            },
            "title": "ScrumTeamType"
        },
        "Y.ScrumTeamType-create": {
            "type": "object",
            "properties": {
                "ScrumMaster": {
                    "$ref": "#/definitions/Y.DeveloperType-create"
                }
            },
            "title": "ScrumTeamType (for create)"
        },
        "Y.ScrumTeamType-update": {
            "type": "object",
            "properties": {
                "ScrumMaster": {
                    "$ref": "#/definitions/Y.DeveloperType-update"
                }
            },
            "title": "ScrumTeamType (for update)"
        },
        "Y.ArchivedMovieType": {
            "type": "object",
            "properties": {
                "ArchivedAt": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date",
                    "example": "2017-04-13"
                }
            },
            "title": "ArchivedMovieType"
        },
        "Y.ArchivedMovieType-create": {
            "type": "object",
            "properties": {
                "ArchivedAt": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date",
                    "example": "2017-04-13"
                }
            },
            "title": "ArchivedMovieType (for create)"
        },
        "Y.ArchivedMovieType-update": {
            "type": "object",
            "properties": {
                "ArchivedAt": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "format": "date",
                    "example": "2017-04-13"
                }
            },
            "title": "ArchivedMovieType (for update)"
        },
        "Y.SomeThingType": {
            "type": "object",
            "properties": {
                "SomeProperty": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/X.PersonType"
                    }
                },
                "VIPs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/X.FriendType"
                    }
                }
            },
            "title": "SomeThingType"
        },
        "Y.SomeThingType-create": {
            "type": "object",
            "properties": {
                "SomeProperty": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/X.PersonType-create"
                    }
                },
                "VIPs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/X.FriendType-create"
                    }
                }
            },
            "title": "SomeThingType (for create)"
        },
        "Y.SomeThingType-update": {
            "type": "object",
            "properties": {
                "SomeProperty": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "example": "string"
                },
                "Contacts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/X.PersonType-update"
                    }
                }
            },
            "title": "SomeThingType (for update)"
        },
        "Y.ChangeTrackingType": {
            "type": "object",
            "properties": {
                "InlineableStreamProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "Change tracking supports inlining these stream properties"
                }
            },
            "title": "ChangeTrackingType"
        },
        "Y.ChangeTrackingType-create": {
            "type": "object",
            "properties": {
                "InlineableStreamProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "Change tracking supports inlining these stream properties"
                }
            },
            "title": "ChangeTrackingType (for create)"
        },
        "Y.ChangeTrackingType-update": {
            "type": "object",
            "properties": {
                "InlineableStreamProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "Change tracking supports inlining these stream properties"
                }
            },
            "title": "ChangeTrackingType (for update)"
        }
    },
    "parameters": {
        "top": {
            "name": "$top",
            "in": "query",
            "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
            "type": "integer",
            "minimum": 0
        },
        "skip": {
            "name": "$skip",
            "in": "query",
            "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
            "type": "integer",
            "minimum": 0
        },
        "count": {
            "name": "$count",
            "in": "query",
            "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
            "type": "boolean"
        },
        "search": {
            "name": "$search",
            "in": "query",
            "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
            "type": "string"
        }
    },
    "responses": {
        "error": {
            "description": "Error",
            "schema": {
                "$ref": "#/definitions/error"
            }
        }
    }
}
